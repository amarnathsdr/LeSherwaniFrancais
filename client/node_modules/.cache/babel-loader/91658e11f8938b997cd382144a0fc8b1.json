{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport Fade from './Fade';\nimport Header from './ToastHeader';\nimport Body from './ToastBody';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  animation: true,\n  autohide: false,\n  delay: 3000,\n  show: true,\n  transition: Fade\n};\n\nvar Toast = function Toast(_ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Transition = _ref.transition,\n      show = _ref.show,\n      animation = _ref.animation,\n      delay = _ref.delay,\n      autohide = _ref.autohide,\n      onClose = _ref.onClose,\n      innerRef = _ref.innerRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\", \"innerRef\"]);\n\n  useEffect(function () {\n    if (autohide && show) {\n      var timer = setTimeout(function () {\n        onClose();\n      }, delay);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n\n    return function () {\n      return null;\n    };\n  }, [autohide, show]);\n  var useAnimation = Transition && animation;\n  var toast = React.createElement(\"div\", _extends({}, props, {\n    ref: innerRef,\n    className: classNames(bsPrefix, className, !useAnimation && show && 'show'),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  var toastContext = {\n    onClose: onClose\n  };\n  return React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, useAnimation ? React.createElement(Transition, {\n    in: show\n  }, toast) : toast);\n};\n\nToast.defaultProps = defaultProps;\nvar DecoratedToast = createBootstrapComponent(Toast, 'toast');\nDecoratedToast.Body = Body;\nDecoratedToast.Header = Header;\nexport default DecoratedToast;","map":null,"metadata":{},"sourceType":"module"}